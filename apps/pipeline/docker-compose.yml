version: '3'
services:
  videoingester:
    image: docker.genistat.ch/ml-pipeline-controller:development
    build:
      context: ""
      dockerfile: Dockerfile
    environment:
      WAIT_HOSTS: kafka1:19092
      WAIT_HOSTS_TIMEOUT: 60
      WAIT_AFTER_HOSTS: 2
    volumes:
      - ./app:/app
      - ./tests:/tests
    depends_on:
      - kafka1
    command: sh -c '/wait && python entrypoint.py startvideoingester  --url="https://rbmn-live.akamaized.net/hls/live/590964/BoRB-AT/master_3360.m3u8" --name="RedBull"'

  branddetector:
    image: docker.genistat.ch/ml-pipeline-controller:development
    build:
      context: ""
      dockerfile: Dockerfile
    environment:
      WAIT_HOSTS: kafka1:19092
      WAIT_HOSTS_TIMEOUT: 60
      WAIT_AFTER_HOSTS: 2
    volumes:
      - ./app:/app
      - ./tests:/tests
    depends_on:
      - kafka1
    command: sh -c '/wait && python entrypoint.py startbranddetector'


  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    logging:
      driver: 'none'

  kafka1:
    image: confluentinc/cp-kafka:6.0.0
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=ERROR,kafka.producer.async.DefaultEventHandler=ERROR,state.change.logger=ERROR'
      KAFKA_REPLICA_FETCH_MAX_BYTES: 3145728
      KAFKA_MESSAGE_MAX_BYTES: 3145728
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zoo1
    logging:
      driver: 'none'